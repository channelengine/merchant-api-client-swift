//
// MerchantProductWithBuyBoxPrice.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct MerchantProductWithBuyBoxPrice: Codable, Hashable {

    /** Product SKU number */
    public var sku: String?
    /** Product GTIN */
    public var gtin: String?
    /** Price of Buy box winner (excl. shipping cost)  Note: not all channels have a separate shipping cost field (e.g. bol.com), so can be the same as BuyBoxPriceInclShipping */
    public var buyBoxPrice: Double?
    /** Price of Buy box winner (incl. shipping cost).  If null, then there is no data or no Buy box winner */
    public var buyBoxPriceInclShipping: Double?
    /** Are you the Buy box winner or not? */
    public var isMerchantBuyBoxWinner: Bool?

    public init(sku: String? = nil, gtin: String? = nil, buyBoxPrice: Double? = nil, buyBoxPriceInclShipping: Double? = nil, isMerchantBuyBoxWinner: Bool? = nil) {
        self.sku = sku
        self.gtin = gtin
        self.buyBoxPrice = buyBoxPrice
        self.buyBoxPriceInclShipping = buyBoxPriceInclShipping
        self.isMerchantBuyBoxWinner = isMerchantBuyBoxWinner
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sku = "Sku"
        case gtin = "Gtin"
        case buyBoxPrice = "BuyBoxPrice"
        case buyBoxPriceInclShipping = "BuyBoxPriceInclShipping"
        case isMerchantBuyBoxWinner = "IsMerchantBuyBoxWinner"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sku, forKey: .sku)
        try container.encodeIfPresent(gtin, forKey: .gtin)
        try container.encodeIfPresent(buyBoxPrice, forKey: .buyBoxPrice)
        try container.encodeIfPresent(buyBoxPriceInclShipping, forKey: .buyBoxPriceInclShipping)
        try container.encodeIfPresent(isMerchantBuyBoxWinner, forKey: .isMerchantBuyBoxWinner)
    }



}
