//
// MerchantWebhookRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MerchantWebhookRequest: Codable, Hashable {

    /** The unique webhook name. */
    public var name: String
    /** The callback URL using by the webhook. */
    public var url: String
    /** Determining if the webhook should be active and callbacks should proceed or not. */
    public var isActive: Bool?
    /** Events supported by the webhook. */
    public var events: [WebhookEventType]

    public init(name: String, url: String, isActive: Bool? = nil, events: [WebhookEventType]) {
        self.name = name
        self.url = url
        self.isActive = isActive
        self.events = events
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name = "Name"
        case url = "Url"
        case isActive = "IsActive"
        case events = "Events"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(url, forKey: .url)
        try container.encodeIfPresent(isActive, forKey: .isActive)
        try container.encode(events, forKey: .events)
    }
}

