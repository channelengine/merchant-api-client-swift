//
// MerchantNotificationResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MerchantNotificationResponse: Codable, Hashable {

    /** Unique identifier used by ChannelEngine. */
    public var id: Int?
    /** Indicating whether the notification is already read using the backoffice. */
    public var read: Bool?
    /** Get the created date time. */
    public var createdAt: Date?
    public var message: String?
    public var subject: String?
    public var count: Int?

    public init(id: Int? = nil, read: Bool? = nil, createdAt: Date? = nil, message: String? = nil, subject: String? = nil, count: Int? = nil) {
        self.id = id
        self.read = read
        self.createdAt = createdAt
        self.message = message
        self.subject = subject
        self.count = count
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id = "Id"
        case read = "Read"
        case createdAt = "CreatedAt"
        case message = "Message"
        case subject = "Subject"
        case count = "Count"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(read, forKey: .read)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(subject, forKey: .subject)
        try container.encodeIfPresent(count, forKey: .count)
    }
}

